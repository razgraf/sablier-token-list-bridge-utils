{"version":3,"file":"token-list-bridge-utils.cjs.production.min.js","sources":["../node_modules/regenerator-runtime/runtime.js","../src/constants/chainId.ts","../src/utils.ts","../src/arbitrum/set_rpc.ts","../src/arbitrum/instantiate_bridge.ts","../src/arbitrum/gateway.ts","../src/providers/ArbitrumMappingProvider.ts","../src/providers/OptimismMappingProvider.ts","../src/providers/PolygonMappingProvider.ts","../src/providers/BnbMappingProvider.ts","../src/abis/erc20.ts","../src/providers/AvalancheMappingProvider.ts","../src/providers/BaseGoerliMappingProvider.ts","../src/providers/BaseMappingProvider.ts","../src/providers/CeloMappingProvider.ts","../src/providers/index.ts","../src/verify.ts","../src/index.ts"],"sourcesContent":["/**\n * Copyright (c) 2014-present, Facebook, Inc.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nvar runtime = (function (exports) {\n  \"use strict\";\n\n  var Op = Object.prototype;\n  var hasOwn = Op.hasOwnProperty;\n  var undefined; // More compressible than void 0.\n  var $Symbol = typeof Symbol === \"function\" ? Symbol : {};\n  var iteratorSymbol = $Symbol.iterator || \"@@iterator\";\n  var asyncIteratorSymbol = $Symbol.asyncIterator || \"@@asyncIterator\";\n  var toStringTagSymbol = $Symbol.toStringTag || \"@@toStringTag\";\n\n  function define(obj, key, value) {\n    Object.defineProperty(obj, key, {\n      value: value,\n      enumerable: true,\n      configurable: true,\n      writable: true\n    });\n    return obj[key];\n  }\n  try {\n    // IE 8 has a broken Object.defineProperty that only works on DOM objects.\n    define({}, \"\");\n  } catch (err) {\n    define = function(obj, key, value) {\n      return obj[key] = value;\n    };\n  }\n\n  function wrap(innerFn, outerFn, self, tryLocsList) {\n    // If outerFn provided and outerFn.prototype is a Generator, then outerFn.prototype instanceof Generator.\n    var protoGenerator = outerFn && outerFn.prototype instanceof Generator ? outerFn : Generator;\n    var generator = Object.create(protoGenerator.prototype);\n    var context = new Context(tryLocsList || []);\n\n    // The ._invoke method unifies the implementations of the .next,\n    // .throw, and .return methods.\n    generator._invoke = makeInvokeMethod(innerFn, self, context);\n\n    return generator;\n  }\n  exports.wrap = wrap;\n\n  // Try/catch helper to minimize deoptimizations. Returns a completion\n  // record like context.tryEntries[i].completion. This interface could\n  // have been (and was previously) designed to take a closure to be\n  // invoked without arguments, but in all the cases we care about we\n  // already have an existing method we want to call, so there's no need\n  // to create a new function object. We can even get away with assuming\n  // the method takes exactly one argument, since that happens to be true\n  // in every case, so we don't have to touch the arguments object. The\n  // only additional allocation required is the completion record, which\n  // has a stable shape and so hopefully should be cheap to allocate.\n  function tryCatch(fn, obj, arg) {\n    try {\n      return { type: \"normal\", arg: fn.call(obj, arg) };\n    } catch (err) {\n      return { type: \"throw\", arg: err };\n    }\n  }\n\n  var GenStateSuspendedStart = \"suspendedStart\";\n  var GenStateSuspendedYield = \"suspendedYield\";\n  var GenStateExecuting = \"executing\";\n  var GenStateCompleted = \"completed\";\n\n  // Returning this object from the innerFn has the same effect as\n  // breaking out of the dispatch switch statement.\n  var ContinueSentinel = {};\n\n  // Dummy constructor functions that we use as the .constructor and\n  // .constructor.prototype properties for functions that return Generator\n  // objects. For full spec compliance, you may wish to configure your\n  // minifier not to mangle the names of these two functions.\n  function Generator() {}\n  function GeneratorFunction() {}\n  function GeneratorFunctionPrototype() {}\n\n  // This is a polyfill for %IteratorPrototype% for environments that\n  // don't natively support it.\n  var IteratorPrototype = {};\n  define(IteratorPrototype, iteratorSymbol, function () {\n    return this;\n  });\n\n  var getProto = Object.getPrototypeOf;\n  var NativeIteratorPrototype = getProto && getProto(getProto(values([])));\n  if (NativeIteratorPrototype &&\n      NativeIteratorPrototype !== Op &&\n      hasOwn.call(NativeIteratorPrototype, iteratorSymbol)) {\n    // This environment has a native %IteratorPrototype%; use it instead\n    // of the polyfill.\n    IteratorPrototype = NativeIteratorPrototype;\n  }\n\n  var Gp = GeneratorFunctionPrototype.prototype =\n    Generator.prototype = Object.create(IteratorPrototype);\n  GeneratorFunction.prototype = GeneratorFunctionPrototype;\n  define(Gp, \"constructor\", GeneratorFunctionPrototype);\n  define(GeneratorFunctionPrototype, \"constructor\", GeneratorFunction);\n  GeneratorFunction.displayName = define(\n    GeneratorFunctionPrototype,\n    toStringTagSymbol,\n    \"GeneratorFunction\"\n  );\n\n  // Helper for defining the .next, .throw, and .return methods of the\n  // Iterator interface in terms of a single ._invoke method.\n  function defineIteratorMethods(prototype) {\n    [\"next\", \"throw\", \"return\"].forEach(function(method) {\n      define(prototype, method, function(arg) {\n        return this._invoke(method, arg);\n      });\n    });\n  }\n\n  exports.isGeneratorFunction = function(genFun) {\n    var ctor = typeof genFun === \"function\" && genFun.constructor;\n    return ctor\n      ? ctor === GeneratorFunction ||\n        // For the native GeneratorFunction constructor, the best we can\n        // do is to check its .name property.\n        (ctor.displayName || ctor.name) === \"GeneratorFunction\"\n      : false;\n  };\n\n  exports.mark = function(genFun) {\n    if (Object.setPrototypeOf) {\n      Object.setPrototypeOf(genFun, GeneratorFunctionPrototype);\n    } else {\n      genFun.__proto__ = GeneratorFunctionPrototype;\n      define(genFun, toStringTagSymbol, \"GeneratorFunction\");\n    }\n    genFun.prototype = Object.create(Gp);\n    return genFun;\n  };\n\n  // Within the body of any async function, `await x` is transformed to\n  // `yield regeneratorRuntime.awrap(x)`, so that the runtime can test\n  // `hasOwn.call(value, \"__await\")` to determine if the yielded value is\n  // meant to be awaited.\n  exports.awrap = function(arg) {\n    return { __await: arg };\n  };\n\n  function AsyncIterator(generator, PromiseImpl) {\n    function invoke(method, arg, resolve, reject) {\n      var record = tryCatch(generator[method], generator, arg);\n      if (record.type === \"throw\") {\n        reject(record.arg);\n      } else {\n        var result = record.arg;\n        var value = result.value;\n        if (value &&\n            typeof value === \"object\" &&\n            hasOwn.call(value, \"__await\")) {\n          return PromiseImpl.resolve(value.__await).then(function(value) {\n            invoke(\"next\", value, resolve, reject);\n          }, function(err) {\n            invoke(\"throw\", err, resolve, reject);\n          });\n        }\n\n        return PromiseImpl.resolve(value).then(function(unwrapped) {\n          // When a yielded Promise is resolved, its final value becomes\n          // the .value of the Promise<{value,done}> result for the\n          // current iteration.\n          result.value = unwrapped;\n          resolve(result);\n        }, function(error) {\n          // If a rejected Promise was yielded, throw the rejection back\n          // into the async generator function so it can be handled there.\n          return invoke(\"throw\", error, resolve, reject);\n        });\n      }\n    }\n\n    var previousPromise;\n\n    function enqueue(method, arg) {\n      function callInvokeWithMethodAndArg() {\n        return new PromiseImpl(function(resolve, reject) {\n          invoke(method, arg, resolve, reject);\n        });\n      }\n\n      return previousPromise =\n        // If enqueue has been called before, then we want to wait until\n        // all previous Promises have been resolved before calling invoke,\n        // so that results are always delivered in the correct order. If\n        // enqueue has not been called before, then it is important to\n        // call invoke immediately, without waiting on a callback to fire,\n        // so that the async generator function has the opportunity to do\n        // any necessary setup in a predictable way. This predictability\n        // is why the Promise constructor synchronously invokes its\n        // executor callback, and why async functions synchronously\n        // execute code before the first await. Since we implement simple\n        // async functions in terms of async generators, it is especially\n        // important to get this right, even though it requires care.\n        previousPromise ? previousPromise.then(\n          callInvokeWithMethodAndArg,\n          // Avoid propagating failures to Promises returned by later\n          // invocations of the iterator.\n          callInvokeWithMethodAndArg\n        ) : callInvokeWithMethodAndArg();\n    }\n\n    // Define the unified helper method that is used to implement .next,\n    // .throw, and .return (see defineIteratorMethods).\n    this._invoke = enqueue;\n  }\n\n  defineIteratorMethods(AsyncIterator.prototype);\n  define(AsyncIterator.prototype, asyncIteratorSymbol, function () {\n    return this;\n  });\n  exports.AsyncIterator = AsyncIterator;\n\n  // Note that simple async functions are implemented on top of\n  // AsyncIterator objects; they just return a Promise for the value of\n  // the final result produced by the iterator.\n  exports.async = function(innerFn, outerFn, self, tryLocsList, PromiseImpl) {\n    if (PromiseImpl === void 0) PromiseImpl = Promise;\n\n    var iter = new AsyncIterator(\n      wrap(innerFn, outerFn, self, tryLocsList),\n      PromiseImpl\n    );\n\n    return exports.isGeneratorFunction(outerFn)\n      ? iter // If outerFn is a generator, return the full iterator.\n      : iter.next().then(function(result) {\n          return result.done ? result.value : iter.next();\n        });\n  };\n\n  function makeInvokeMethod(innerFn, self, context) {\n    var state = GenStateSuspendedStart;\n\n    return function invoke(method, arg) {\n      if (state === GenStateExecuting) {\n        throw new Error(\"Generator is already running\");\n      }\n\n      if (state === GenStateCompleted) {\n        if (method === \"throw\") {\n          throw arg;\n        }\n\n        // Be forgiving, per 25.3.3.3.3 of the spec:\n        // https://people.mozilla.org/~jorendorff/es6-draft.html#sec-generatorresume\n        return doneResult();\n      }\n\n      context.method = method;\n      context.arg = arg;\n\n      while (true) {\n        var delegate = context.delegate;\n        if (delegate) {\n          var delegateResult = maybeInvokeDelegate(delegate, context);\n          if (delegateResult) {\n            if (delegateResult === ContinueSentinel) continue;\n            return delegateResult;\n          }\n        }\n\n        if (context.method === \"next\") {\n          // Setting context._sent for legacy support of Babel's\n          // function.sent implementation.\n          context.sent = context._sent = context.arg;\n\n        } else if (context.method === \"throw\") {\n          if (state === GenStateSuspendedStart) {\n            state = GenStateCompleted;\n            throw context.arg;\n          }\n\n          context.dispatchException(context.arg);\n\n        } else if (context.method === \"return\") {\n          context.abrupt(\"return\", context.arg);\n        }\n\n        state = GenStateExecuting;\n\n        var record = tryCatch(innerFn, self, context);\n        if (record.type === \"normal\") {\n          // If an exception is thrown from innerFn, we leave state ===\n          // GenStateExecuting and loop back for another invocation.\n          state = context.done\n            ? GenStateCompleted\n            : GenStateSuspendedYield;\n\n          if (record.arg === ContinueSentinel) {\n            continue;\n          }\n\n          return {\n            value: record.arg,\n            done: context.done\n          };\n\n        } else if (record.type === \"throw\") {\n          state = GenStateCompleted;\n          // Dispatch the exception by looping back around to the\n          // context.dispatchException(context.arg) call above.\n          context.method = \"throw\";\n          context.arg = record.arg;\n        }\n      }\n    };\n  }\n\n  // Call delegate.iterator[context.method](context.arg) and handle the\n  // result, either by returning a { value, done } result from the\n  // delegate iterator, or by modifying context.method and context.arg,\n  // setting context.delegate to null, and returning the ContinueSentinel.\n  function maybeInvokeDelegate(delegate, context) {\n    var method = delegate.iterator[context.method];\n    if (method === undefined) {\n      // A .throw or .return when the delegate iterator has no .throw\n      // method always terminates the yield* loop.\n      context.delegate = null;\n\n      if (context.method === \"throw\") {\n        // Note: [\"return\"] must be used for ES3 parsing compatibility.\n        if (delegate.iterator[\"return\"]) {\n          // If the delegate iterator has a return method, give it a\n          // chance to clean up.\n          context.method = \"return\";\n          context.arg = undefined;\n          maybeInvokeDelegate(delegate, context);\n\n          if (context.method === \"throw\") {\n            // If maybeInvokeDelegate(context) changed context.method from\n            // \"return\" to \"throw\", let that override the TypeError below.\n            return ContinueSentinel;\n          }\n        }\n\n        context.method = \"throw\";\n        context.arg = new TypeError(\n          \"The iterator does not provide a 'throw' method\");\n      }\n\n      return ContinueSentinel;\n    }\n\n    var record = tryCatch(method, delegate.iterator, context.arg);\n\n    if (record.type === \"throw\") {\n      context.method = \"throw\";\n      context.arg = record.arg;\n      context.delegate = null;\n      return ContinueSentinel;\n    }\n\n    var info = record.arg;\n\n    if (! info) {\n      context.method = \"throw\";\n      context.arg = new TypeError(\"iterator result is not an object\");\n      context.delegate = null;\n      return ContinueSentinel;\n    }\n\n    if (info.done) {\n      // Assign the result of the finished delegate to the temporary\n      // variable specified by delegate.resultName (see delegateYield).\n      context[delegate.resultName] = info.value;\n\n      // Resume execution at the desired location (see delegateYield).\n      context.next = delegate.nextLoc;\n\n      // If context.method was \"throw\" but the delegate handled the\n      // exception, let the outer generator proceed normally. If\n      // context.method was \"next\", forget context.arg since it has been\n      // \"consumed\" by the delegate iterator. If context.method was\n      // \"return\", allow the original .return call to continue in the\n      // outer generator.\n      if (context.method !== \"return\") {\n        context.method = \"next\";\n        context.arg = undefined;\n      }\n\n    } else {\n      // Re-yield the result returned by the delegate method.\n      return info;\n    }\n\n    // The delegate iterator is finished, so forget it and continue with\n    // the outer generator.\n    context.delegate = null;\n    return ContinueSentinel;\n  }\n\n  // Define Generator.prototype.{next,throw,return} in terms of the\n  // unified ._invoke helper method.\n  defineIteratorMethods(Gp);\n\n  define(Gp, toStringTagSymbol, \"Generator\");\n\n  // A Generator should always return itself as the iterator object when the\n  // @@iterator function is called on it. Some browsers' implementations of the\n  // iterator prototype chain incorrectly implement this, causing the Generator\n  // object to not be returned from this call. This ensures that doesn't happen.\n  // See https://github.com/facebook/regenerator/issues/274 for more details.\n  define(Gp, iteratorSymbol, function() {\n    return this;\n  });\n\n  define(Gp, \"toString\", function() {\n    return \"[object Generator]\";\n  });\n\n  function pushTryEntry(locs) {\n    var entry = { tryLoc: locs[0] };\n\n    if (1 in locs) {\n      entry.catchLoc = locs[1];\n    }\n\n    if (2 in locs) {\n      entry.finallyLoc = locs[2];\n      entry.afterLoc = locs[3];\n    }\n\n    this.tryEntries.push(entry);\n  }\n\n  function resetTryEntry(entry) {\n    var record = entry.completion || {};\n    record.type = \"normal\";\n    delete record.arg;\n    entry.completion = record;\n  }\n\n  function Context(tryLocsList) {\n    // The root entry object (effectively a try statement without a catch\n    // or a finally block) gives us a place to store values thrown from\n    // locations where there is no enclosing try statement.\n    this.tryEntries = [{ tryLoc: \"root\" }];\n    tryLocsList.forEach(pushTryEntry, this);\n    this.reset(true);\n  }\n\n  exports.keys = function(object) {\n    var keys = [];\n    for (var key in object) {\n      keys.push(key);\n    }\n    keys.reverse();\n\n    // Rather than returning an object with a next method, we keep\n    // things simple and return the next function itself.\n    return function next() {\n      while (keys.length) {\n        var key = keys.pop();\n        if (key in object) {\n          next.value = key;\n          next.done = false;\n          return next;\n        }\n      }\n\n      // To avoid creating an additional object, we just hang the .value\n      // and .done properties off the next function object itself. This\n      // also ensures that the minifier will not anonymize the function.\n      next.done = true;\n      return next;\n    };\n  };\n\n  function values(iterable) {\n    if (iterable) {\n      var iteratorMethod = iterable[iteratorSymbol];\n      if (iteratorMethod) {\n        return iteratorMethod.call(iterable);\n      }\n\n      if (typeof iterable.next === \"function\") {\n        return iterable;\n      }\n\n      if (!isNaN(iterable.length)) {\n        var i = -1, next = function next() {\n          while (++i < iterable.length) {\n            if (hasOwn.call(iterable, i)) {\n              next.value = iterable[i];\n              next.done = false;\n              return next;\n            }\n          }\n\n          next.value = undefined;\n          next.done = true;\n\n          return next;\n        };\n\n        return next.next = next;\n      }\n    }\n\n    // Return an iterator with no values.\n    return { next: doneResult };\n  }\n  exports.values = values;\n\n  function doneResult() {\n    return { value: undefined, done: true };\n  }\n\n  Context.prototype = {\n    constructor: Context,\n\n    reset: function(skipTempReset) {\n      this.prev = 0;\n      this.next = 0;\n      // Resetting context._sent for legacy support of Babel's\n      // function.sent implementation.\n      this.sent = this._sent = undefined;\n      this.done = false;\n      this.delegate = null;\n\n      this.method = \"next\";\n      this.arg = undefined;\n\n      this.tryEntries.forEach(resetTryEntry);\n\n      if (!skipTempReset) {\n        for (var name in this) {\n          // Not sure about the optimal order of these conditions:\n          if (name.charAt(0) === \"t\" &&\n              hasOwn.call(this, name) &&\n              !isNaN(+name.slice(1))) {\n            this[name] = undefined;\n          }\n        }\n      }\n    },\n\n    stop: function() {\n      this.done = true;\n\n      var rootEntry = this.tryEntries[0];\n      var rootRecord = rootEntry.completion;\n      if (rootRecord.type === \"throw\") {\n        throw rootRecord.arg;\n      }\n\n      return this.rval;\n    },\n\n    dispatchException: function(exception) {\n      if (this.done) {\n        throw exception;\n      }\n\n      var context = this;\n      function handle(loc, caught) {\n        record.type = \"throw\";\n        record.arg = exception;\n        context.next = loc;\n\n        if (caught) {\n          // If the dispatched exception was caught by a catch block,\n          // then let that catch block handle the exception normally.\n          context.method = \"next\";\n          context.arg = undefined;\n        }\n\n        return !! caught;\n      }\n\n      for (var i = this.tryEntries.length - 1; i >= 0; --i) {\n        var entry = this.tryEntries[i];\n        var record = entry.completion;\n\n        if (entry.tryLoc === \"root\") {\n          // Exception thrown outside of any try block that could handle\n          // it, so set the completion value of the entire function to\n          // throw the exception.\n          return handle(\"end\");\n        }\n\n        if (entry.tryLoc <= this.prev) {\n          var hasCatch = hasOwn.call(entry, \"catchLoc\");\n          var hasFinally = hasOwn.call(entry, \"finallyLoc\");\n\n          if (hasCatch && hasFinally) {\n            if (this.prev < entry.catchLoc) {\n              return handle(entry.catchLoc, true);\n            } else if (this.prev < entry.finallyLoc) {\n              return handle(entry.finallyLoc);\n            }\n\n          } else if (hasCatch) {\n            if (this.prev < entry.catchLoc) {\n              return handle(entry.catchLoc, true);\n            }\n\n          } else if (hasFinally) {\n            if (this.prev < entry.finallyLoc) {\n              return handle(entry.finallyLoc);\n            }\n\n          } else {\n            throw new Error(\"try statement without catch or finally\");\n          }\n        }\n      }\n    },\n\n    abrupt: function(type, arg) {\n      for (var i = this.tryEntries.length - 1; i >= 0; --i) {\n        var entry = this.tryEntries[i];\n        if (entry.tryLoc <= this.prev &&\n            hasOwn.call(entry, \"finallyLoc\") &&\n            this.prev < entry.finallyLoc) {\n          var finallyEntry = entry;\n          break;\n        }\n      }\n\n      if (finallyEntry &&\n          (type === \"break\" ||\n           type === \"continue\") &&\n          finallyEntry.tryLoc <= arg &&\n          arg <= finallyEntry.finallyLoc) {\n        // Ignore the finally entry if control is not jumping to a\n        // location outside the try/catch block.\n        finallyEntry = null;\n      }\n\n      var record = finallyEntry ? finallyEntry.completion : {};\n      record.type = type;\n      record.arg = arg;\n\n      if (finallyEntry) {\n        this.method = \"next\";\n        this.next = finallyEntry.finallyLoc;\n        return ContinueSentinel;\n      }\n\n      return this.complete(record);\n    },\n\n    complete: function(record, afterLoc) {\n      if (record.type === \"throw\") {\n        throw record.arg;\n      }\n\n      if (record.type === \"break\" ||\n          record.type === \"continue\") {\n        this.next = record.arg;\n      } else if (record.type === \"return\") {\n        this.rval = this.arg = record.arg;\n        this.method = \"return\";\n        this.next = \"end\";\n      } else if (record.type === \"normal\" && afterLoc) {\n        this.next = afterLoc;\n      }\n\n      return ContinueSentinel;\n    },\n\n    finish: function(finallyLoc) {\n      for (var i = this.tryEntries.length - 1; i >= 0; --i) {\n        var entry = this.tryEntries[i];\n        if (entry.finallyLoc === finallyLoc) {\n          this.complete(entry.completion, entry.afterLoc);\n          resetTryEntry(entry);\n          return ContinueSentinel;\n        }\n      }\n    },\n\n    \"catch\": function(tryLoc) {\n      for (var i = this.tryEntries.length - 1; i >= 0; --i) {\n        var entry = this.tryEntries[i];\n        if (entry.tryLoc === tryLoc) {\n          var record = entry.completion;\n          if (record.type === \"throw\") {\n            var thrown = record.arg;\n            resetTryEntry(entry);\n          }\n          return thrown;\n        }\n      }\n\n      // The context.catch method must only be called with a location\n      // argument that corresponds to a known catch block.\n      throw new Error(\"illegal catch attempt\");\n    },\n\n    delegateYield: function(iterable, resultName, nextLoc) {\n      this.delegate = {\n        iterator: values(iterable),\n        resultName: resultName,\n        nextLoc: nextLoc\n      };\n\n      if (this.method === \"next\") {\n        // Deliberately forget the last sent value so that we don't\n        // accidentally pass it on to the delegate.\n        this.arg = undefined;\n      }\n\n      return ContinueSentinel;\n    }\n  };\n\n  // Regardless of whether this script is executing as a CommonJS module\n  // or not, return the runtime object so that we can declare the variable\n  // regeneratorRuntime in the outer scope, which allows this module to be\n  // injected easily by `bin/regenerator --include-runtime script.js`.\n  return exports;\n\n}(\n  // If this script is executing as a CommonJS module, use module.exports\n  // as the regeneratorRuntime namespace. Otherwise create a new empty\n  // object. Either way, the resulting object will be used to initialize\n  // the regeneratorRuntime variable at the top of this file.\n  typeof module === \"object\" ? module.exports : {}\n));\n\ntry {\n  regeneratorRuntime = runtime;\n} catch (accidentalStrictMode) {\n  // This module should not be running in strict mode, so the above\n  // assignment should always work unless something is misconfigured. Just\n  // in case runtime.js accidentally runs in strict mode, in modern engines\n  // we can explicitly access globalThis. In older engines we can escape\n  // strict mode using a global Function call. This could conceivably fail\n  // if a Content Security Policy forbids using Function, but in that case\n  // the proper solution is to fix the accidental strict mode problem. If\n  // you've misconfigured your bundler to force strict mode and applied a\n  // CSP to forbid Function, and you're not willing to fix either of those\n  // problems, please detail your unique predicament in a GitHub issue.\n  if (typeof globalThis === \"object\") {\n    globalThis.regeneratorRuntime = runtime;\n  } else {\n    Function(\"r\", \"regeneratorRuntime = r\")(runtime);\n  }\n}\n","export enum ChainId {\n  MAINNET = 1,\n  RINKEBY = 4,\n\n  ARBITRUM_ONE = 42161,\n  ARBITRUM_RINKEBY = 421611,\n\n  OPTIMISM = 10,\n  OPTIMISTIC_KOVAN = 69,\n\n  POLYGON = 137,\n  POLYGON_MUMBAI = 80001,\n\n  CELO = 42220,\n  CELO_ALFAJORES = 44787,\n\n  BNB = 56,\n\n  AVALANCHE = 43114,\n\n  BASE = 8453,\n  BASE_GOERLI = 84531,\n}\n","import { TokenInfo, TokenList } from '@uniswap/token-lists'\nimport { readFileSync, existsSync } from 'fs'\nimport axios from 'axios'\nimport { ChainId } from './constants/chainId'\nimport { Contract } from 'web3-eth-contract'\n\nexport type TokenListOrFetchableTokenList = TokenList | string\n\nexport function compareTokenInfos(t1: TokenInfo, t2: TokenInfo) {\n  if (t1.chainId === t2.chainId) {\n    return t1.symbol.toLowerCase() < t2.symbol.toLowerCase() ? -1 : 1\n  }\n  return t1.chainId < t2.chainId ? -1 : 1\n}\n\n// ref: https://github.com/OffchainLabs/arb-token-lists/blob/master/src/lib/utils.ts\n\nexport async function getTokenList(\n  l1TokenListOrPathOrUrl: TokenListOrFetchableTokenList\n): Promise<TokenList> {\n  if (typeof l1TokenListOrPathOrUrl === 'string') {\n    return getTokenListObj(l1TokenListOrPathOrUrl)\n  } else {\n    return l1TokenListOrPathOrUrl\n  }\n}\n\nexport const getTokenListObjFromUrl = async (url: string) => {\n  return (await axios.get(url)).data as TokenList\n}\n\nexport const getTokenListObjFromLocalPath = async (path: string) => {\n  return JSON.parse(readFileSync(path).toString()) as TokenList\n}\n\nexport const getTokenListObj = async (pathOrUrl: string) => {\n  const tokenList: TokenList = await (async (pathOrUrl: string) => {\n    const localFileExists = existsSync(pathOrUrl)\n    const looksLikeUrl = isValidHttpUrl(pathOrUrl)\n    if (localFileExists) {\n      return getTokenListObjFromLocalPath(pathOrUrl)\n    } else if (looksLikeUrl) {\n      return await getTokenListObjFromUrl(pathOrUrl)\n    } else {\n      throw new Error('Could not find token list')\n    }\n  })(pathOrUrl)\n  isTokenList(tokenList)\n  return tokenList\n}\n\n// https://stackoverflow.com/questions/5717093/check-if-a-javascript-string-is-a-url\n\nfunction isValidHttpUrl(urlString: string) {\n  let url\n\n  try {\n    url = new URL(urlString)\n  } catch (_) {\n    return false\n  }\n\n  return url.protocol === 'http:' || url.protocol === 'https:'\n}\n\n// typeguard:\nexport const isTokenList = (obj: any) => {\n  const expectedListKeys = ['name', 'timestamp', 'version', 'tokens']\n  const actualListKeys = new Set(Object.keys(obj))\n  if (!expectedListKeys.every((key) => actualListKeys.has(key))) {\n    throw new Error('tokenlist typeguard error: required list key not included')\n  }\n  const { version, tokens } = obj\n  if (\n    !['major', 'minor', 'patch'].every((key) => {\n      return typeof version[key] === 'number'\n    })\n  ) {\n    throw new Error('tokenlist typeguard error: invalid version')\n  }\n  if (\n    !tokens.every((token: any) => {\n      const tokenKeys = new Set(Object.keys(token))\n      return ['chainId', 'address', 'name', 'decimals', 'symbol'].every(\n        (key) => {\n          return tokenKeys.has(key)\n        }\n      )\n    })\n  ) {\n    throw new Error('tokenlist typeguard error: token missing required key')\n  }\n}\n\nexport function getRpcUrl(chainId: ChainId): string {\n  switch (chainId) {\n    case ChainId.MAINNET:\n      return 'https://rpc.ankr.com/eth'\n    case ChainId.OPTIMISM:\n      return 'https://rpc.ankr.com/optimism' // seems to have higher rate limit than https://mainnet.optimism.io/\n    case ChainId.OPTIMISTIC_KOVAN:\n      return 'https://kovan.optimism.io'\n    case ChainId.ARBITRUM_ONE:\n      return 'https://arb1.arbitrum.io/rpc'\n    case ChainId.ARBITRUM_RINKEBY:\n      return 'https://rinkeby.arbitrum.io/rpc'\n    case ChainId.POLYGON:\n      return 'https://polygon-rpc.com/'\n    case ChainId.POLYGON_MUMBAI:\n      return 'https://rpc-endpoints.superfluid.dev/mumbai'\n    case ChainId.BNB:\n      return 'https://bsc-dataseed1.binance.org'\n    case ChainId.AVALANCHE:\n      return 'https://api.avax.network/ext/bc/C/rpc'\n    case ChainId.CELO:\n      return 'https://forno.celo.org/'\n    case ChainId.CELO_ALFAJORES:\n      return 'https://alfajores-forno.celo-testnet.org/'\n    case ChainId.BASE:\n      return 'https://mainnet.base.org'\n    case ChainId.BASE_GOERLI:\n      return 'https://goerli.base.org'\n    default:\n  }\n  throw new Error('Unsupported ChainId')\n}\n\nexport async function getTokenSymbolFromContract(tokenContract: Contract) {\n  const symbol = await Promise.all([tokenContract.methods.symbol().call()])\n  return symbol\n}\n","import { config } from 'dotenv'\nimport { ChainId } from '../constants/chainId'\nimport { getRpcUrl } from '../utils'\n\n// MAINNET_RPC value is required for arb-sdk. fall back to https://rpc.ankr.com/eth if MAINNET_RPC not provided in an .env file\nconfig()\nprocess.env.MAINNET_RPC ??= getRpcUrl(ChainId.MAINNET)\n","import './set_rpc.ts'\nimport { providers } from 'ethers'\n\nconst networkID = 42161\n\nconst l2Rpc = (chainId: number) => {\n  if (chainId === 42161) return 'https://arb1.arbitrum.io/rpc'\n  else if (chainId === 421611) return 'https://rinkeby.arbitrum.io/rpc'\n  else if (chainId === 42170) return 'https://nova.arbitrum.io/rpc'\n  else if (chainId === 421613) return 'https://goerli-rollup.arbitrum.io/rpc'\n  throw new Error('No L2 RPC detected')\n}\n\n// ref: https://github.com/OffchainLabs/arb-token-lists/blob/master/src/lib/instantiate_bridge.ts\nexport const getNetworkConfig = async () => {\n  const { getL1Network, getL2Network, MultiCaller } = await import(\n    '@arbitrum/sdk'\n  )\n  const l2Network = await getL2Network(networkID)\n  const l1Network = await getL1Network(l2Network.partnerChainID)\n\n  const arbProvider = new providers.JsonRpcProvider(l2Rpc(l2Network.chainID))\n  const ethProvider = new providers.JsonRpcProvider(process.env.MAINNET_RPC)\n\n  const l1MultiCaller = await MultiCaller.fromProvider(ethProvider)\n  const l2MultiCaller = await MultiCaller.fromProvider(arbProvider)\n\n  return {\n    l1: {\n      network: l1Network,\n      provider: ethProvider,\n      multiCaller: l1MultiCaller,\n    },\n    l2: {\n      network: l2Network,\n      provider: arbProvider,\n      multiCaller: l2MultiCaller,\n    },\n  }\n}\n","import { MultiCaller } from '@arbitrum/sdk'\nimport { L1GatewayRouter__factory } from '@arbitrum/sdk/dist/lib/abi/factories/L1GatewayRouter__factory'\n\n// ref: https://github.com/OffchainLabs/arb-token-lists/blob/0165d84d51746005aa2da0328c5ca2ac651480fb/src/lib/utils.ts#L42\n\nexport const getL2TokenAddressesFromL1 = async (\n  l1TokenAddresses: string[],\n  multiCaller: MultiCaller,\n  l1GatewayRouterAddress: string\n) => {\n  const iFace = L1GatewayRouter__factory.createInterface()\n\n  return await multiCaller.multiCall(\n    l1TokenAddresses.map((addr) => ({\n      encoder: () =>\n        iFace.encodeFunctionData('calculateL2TokenAddress', [addr]),\n      decoder: (returnData: string) =>\n        iFace.decodeFunctionResult(\n          'calculateL2TokenAddress',\n          returnData\n        )[0] as string,\n      targetAddr: l1GatewayRouterAddress,\n    }))\n  )\n}\n","import { MappingProvider } from './MappingProvider'\nimport { getNetworkConfig } from '../arbitrum/instantiate_bridge'\nimport { getL2TokenAddressesFromL1 } from '../arbitrum/gateway'\nimport { TokenList } from '@uniswap/token-lists'\nimport { GenericMappedTokenData } from '../constants/types'\n\n/**\n * This provider provides the l1->l2(Arbitrum) address mappings using the arbitrum SDK.\n */\nexport class ArbitrumMappingProvider implements MappingProvider {\n  l1TokenList: TokenList\n\n  constructor(l1TokenList: TokenList) {\n    this.l1TokenList = l1TokenList\n  }\n\n  async provide(): Promise<GenericMappedTokenData> {\n    let tokens: { [key: string]: string | undefined } = {}\n\n    const { l1, l2 } = await getNetworkConfig()\n\n    let tokenAddresses = this.l1TokenList.tokens.map((token) =>\n      token.address.toLowerCase()\n    )\n\n    const l2AddressesFromL1 = await getL2TokenAddressesFromL1(\n      tokenAddresses,\n      l1.multiCaller,\n      l2.network.tokenBridge.l1GatewayRouter\n    )\n\n    tokens = tokenAddresses.reduce(\n      (obj, key, index) => ({ ...obj, [key]: l2AddressesFromL1[index] }),\n      {}\n    )\n\n    return tokens\n  }\n}\n","import { MappingProvider } from './MappingProvider'\nimport { ChainId } from '../constants/chainId'\nimport { getTokenList } from '../utils'\nimport { GenericMappedTokenData } from '../constants/types'\n\nconst optimismTokenListURL =\n  'https://raw.githubusercontent.com/' +\n  'ethereum-optimism/ethereum-optimism.github.io/master/optimism.tokenlist.json'\n\n/**\n * The Optimism L2 mapping (linked above) is manually maintained by the Optimism team.\n *\n * This provider provides the l1->l2(Optimism) token mappings.\n */\nexport class OptimismMappingProvider implements MappingProvider {\n  async provide(): Promise<GenericMappedTokenData> {\n    const tokens: { [key: string]: string | undefined } = {}\n\n    let allTokens = await getTokenList(optimismTokenListURL)\n\n    let opTokenId_baseAddressMap: Record<string, string> = {}\n    allTokens.tokens.forEach((token) => {\n      if (token.chainId === ChainId.OPTIMISM) {\n        if (typeof token.extensions?.opTokenId === 'string') {\n          opTokenId_baseAddressMap[token.extensions.opTokenId] = token.address\n        }\n      }\n    })\n\n    allTokens.tokens.forEach((token) => {\n      if (\n        token.chainId === ChainId.MAINNET &&\n        typeof token.extensions?.opTokenId === 'string' &&\n        token.extensions!.opTokenId in opTokenId_baseAddressMap\n      ) {\n        tokens[token.address.toLowerCase()] =\n          opTokenId_baseAddressMap[token.extensions!.opTokenId]\n      }\n    })\n\n    return tokens\n  }\n}\n","import axios from 'axios'\nimport { MappingProvider } from './MappingProvider'\nimport { PolygonMappedTokenData } from '../constants/types'\n\n// called from https://mapper.polygon.technology\nconst url = 'https://api-polygon-tokens.polygon.technology/api/v1/info/all-mappings'\nconst access_token = '504afd90-3228-4df9-9d88-9b4d70646101'\n\n/**\n * The Polygon team manually maintains the mapping via user submissions at\n * https://mapper.polygon.technology.\n *\n * This provider provides the l1->l2(Polygon) token mappings.\n */\nexport class PolygonMappingProvider implements MappingProvider {\n  async provide(): Promise<PolygonMappedTokenData> {\n    const response = await axios.get(url, {\n      headers: { 'x-access-token': access_token },\n    })\n    const tokens: PolygonMappedTokenData = {}\n\n    for (const token of response.data) {\n      if (token.isPos) {\n        tokens[token.rootToken.toLowerCase()] = token\n      }\n    }\n    return tokens\n  }\n}\n","import { MappingProvider } from './MappingProvider'\nimport { MappedTokenData } from '../constants/types'\nimport bnbMappings from '../local_mappings/bnb.json'\n\n// barring a better external source, we use a local source of mappings for bnb\nexport class BnbMappingProvider implements MappingProvider {\n  async provide(): Promise<MappedTokenData> {\n    const tokens = bnbMappings as MappedTokenData\n    return tokens\n  }\n}\n","import { AbiItem } from 'web3-utils'\n\nconst abi: AbiItem[] = [\n  {\n    constant: true,\n    inputs: [],\n    name: 'name',\n    outputs: [\n      {\n        name: '',\n        type: 'string',\n      },\n    ],\n    payable: false,\n    stateMutability: 'view',\n    type: 'function',\n  },\n  {\n    constant: false,\n    inputs: [\n      {\n        name: '_spender',\n        type: 'address',\n      },\n      {\n        name: '_value',\n        type: 'uint256',\n      },\n    ],\n    name: 'approve',\n    outputs: [\n      {\n        name: '',\n        type: 'bool',\n      },\n    ],\n    payable: false,\n    stateMutability: 'nonpayable',\n    type: 'function',\n  },\n  {\n    constant: true,\n    inputs: [],\n    name: 'totalSupply',\n    outputs: [\n      {\n        name: '',\n        type: 'uint256',\n      },\n    ],\n    payable: false,\n    stateMutability: 'view',\n    type: 'function',\n  },\n  {\n    constant: false,\n    inputs: [\n      {\n        name: '_from',\n        type: 'address',\n      },\n      {\n        name: '_to',\n        type: 'address',\n      },\n      {\n        name: '_value',\n        type: 'uint256',\n      },\n    ],\n    name: 'transferFrom',\n    outputs: [\n      {\n        name: '',\n        type: 'bool',\n      },\n    ],\n    payable: false,\n    stateMutability: 'nonpayable',\n    type: 'function',\n  },\n  {\n    constant: true,\n    inputs: [],\n    name: 'decimals',\n    outputs: [\n      {\n        name: '',\n        type: 'uint8',\n      },\n    ],\n    payable: false,\n    stateMutability: 'view',\n    type: 'function',\n  },\n  {\n    constant: true,\n    inputs: [\n      {\n        name: '_owner',\n        type: 'address',\n      },\n    ],\n    name: 'balanceOf',\n    outputs: [\n      {\n        name: 'balance',\n        type: 'uint256',\n      },\n    ],\n    payable: false,\n    stateMutability: 'view',\n    type: 'function',\n  },\n  {\n    constant: true,\n    inputs: [],\n    name: 'symbol',\n    outputs: [\n      {\n        name: '',\n        type: 'string',\n      },\n    ],\n    payable: false,\n    stateMutability: 'view',\n    type: 'function',\n  },\n  {\n    constant: false,\n    inputs: [\n      {\n        name: '_to',\n        type: 'address',\n      },\n      {\n        name: '_value',\n        type: 'uint256',\n      },\n    ],\n    name: 'transfer',\n    outputs: [\n      {\n        name: '',\n        type: 'bool',\n      },\n    ],\n    payable: false,\n    stateMutability: 'nonpayable',\n    type: 'function',\n  },\n  {\n    constant: true,\n    inputs: [\n      {\n        name: '_owner',\n        type: 'address',\n      },\n      {\n        name: '_spender',\n        type: 'address',\n      },\n    ],\n    name: 'allowance',\n    outputs: [\n      {\n        name: '',\n        type: 'uint256',\n      },\n    ],\n    payable: false,\n    stateMutability: 'view',\n    type: 'function',\n  },\n  {\n    payable: true,\n    stateMutability: 'payable',\n    type: 'fallback',\n  },\n  {\n    anonymous: false,\n    inputs: [\n      {\n        indexed: true,\n        name: 'owner',\n        type: 'address',\n      },\n      {\n        indexed: true,\n        name: 'spender',\n        type: 'address',\n      },\n      {\n        indexed: false,\n        name: 'value',\n        type: 'uint256',\n      },\n    ],\n    name: 'Approval',\n    type: 'event',\n  },\n  {\n    anonymous: false,\n    inputs: [\n      {\n        indexed: true,\n        name: 'from',\n        type: 'address',\n      },\n      {\n        indexed: true,\n        name: 'to',\n        type: 'address',\n      },\n      {\n        indexed: false,\n        name: 'value',\n        type: 'uint256',\n      },\n    ],\n    name: 'Transfer',\n    type: 'event',\n  },\n]\n\nexport default abi\n","import { MappingProvider } from './MappingProvider'\nimport { MappedTokenData } from '../constants/types'\nimport avaxMappings from '../local_mappings/avax.json'\n\n// barring a better external source, we use a local source of mappings for avalanche\nexport class AvalancheMappingProvider implements MappingProvider {\n  async provide(): Promise<MappedTokenData> {\n    const tokens = avaxMappings as MappedTokenData\n    return tokens\n  }\n}\n","import { MappingProvider } from './MappingProvider'\nimport { ChainId } from '../constants/chainId'\nimport { getTokenList } from '../utils'\nimport { GenericMappedTokenData } from '../constants/types'\n\nconst baseGoerliTokenListURL =\n  'https://raw.githubusercontent.com/' +\n  'ethereum-optimism/ethereum-optimism.github.io/master/optimism.tokenlist.json'\n\n/**\n * The Base Goerli mapping (linked above) is manually maintained by the Coinbase team\n * in this repository: https://github.com/ethereum-optimism/ethereum-optimism.github.io.\n */\nexport class BaseGoerliMappingProvider implements MappingProvider {\n  async provide(): Promise<GenericMappedTokenData> {\n    const tokens: { [key: string]: string | undefined } = {}\n\n    let allTokens = await getTokenList(baseGoerliTokenListURL)\n\n    let opTokenId_baseGoerliAddressMap: Record<string, string> = {}\n    allTokens.tokens.forEach((token) => {\n      if (token.chainId === ChainId.BASE_GOERLI) {\n        if (typeof token.extensions?.opTokenId === 'string') {\n          opTokenId_baseGoerliAddressMap[token.extensions.opTokenId] =\n            token.address\n        }\n      }\n    })\n\n    allTokens.tokens.forEach((token) => {\n      if (\n        token.chainId === ChainId.MAINNET &&\n        typeof token.extensions?.opTokenId === 'string' &&\n        token.extensions!.opTokenId in opTokenId_baseGoerliAddressMap\n      ) {\n        tokens[token.address.toLowerCase()] =\n          opTokenId_baseGoerliAddressMap[token.extensions!.opTokenId]\n      }\n    })\n\n    return tokens\n  }\n}\n","import { MappingProvider } from './MappingProvider'\nimport { ChainId } from '../constants/chainId'\nimport { getTokenList } from '../utils'\nimport { GenericMappedTokenData } from '../constants/types'\n\nconst baseGoerliTokenListURL =\n  'https://raw.githubusercontent.com/' +\n  'ethereum-optimism/ethereum-optimism.github.io/master/optimism.tokenlist.json'\n\n/**\n * The Base mapping (linked above) is manually maintained by the Coinbase team\n * in this repository: https://github.com/ethereum-optimism/ethereum-optimism.github.io.\n */\nexport class BaseMappingProvider implements MappingProvider {\n  async provide(): Promise<GenericMappedTokenData> {\n    const tokens: { [key: string]: string | undefined } = {}\n\n    let allTokens = await getTokenList(baseGoerliTokenListURL)\n\n    let opTokenId_baseAddressMap: Record<string, string> = {}\n    allTokens.tokens.forEach((token) => {\n      if (token.chainId === ChainId.BASE) {\n        if (typeof token.extensions?.opTokenId === 'string') {\n          opTokenId_baseAddressMap[token.extensions.opTokenId] = token.address\n        }\n      }\n    })\n\n    allTokens.tokens.forEach((token) => {\n      if (\n        token.chainId === ChainId.MAINNET &&\n        typeof token.extensions?.opTokenId === 'string' &&\n        token.extensions!.opTokenId in opTokenId_baseAddressMap\n      ) {\n        tokens[token.address.toLowerCase()] =\n          opTokenId_baseAddressMap[token.extensions!.opTokenId]\n      }\n    })\n\n    return tokens\n  }\n}\n","import { MappingProvider } from './MappingProvider'\nimport { MappedTokenData } from '../constants/types'\nimport celoMappings from '../local_mappings/celo.json'\n\n// barring a better external source, we use a local source of mappings for celo\nexport class CeloMappingProvider implements MappingProvider {\n  async provide(): Promise<MappedTokenData> {\n    return celoMappings as MappedTokenData\n  }\n}\n","import { ChainId } from '../constants/chainId'\nimport { Contract } from 'web3-eth-contract'\nimport { ArbitrumMappingProvider } from './ArbitrumMappingProvider'\nimport { OptimismMappingProvider } from './OptimismMappingProvider'\nimport { PolygonMappingProvider } from './PolygonMappingProvider'\nimport { BnbMappingProvider } from './BnbMappingProvider'\nimport { TokenInfo, TokenList } from '@uniswap/token-lists'\nimport { ethers } from 'ethers'\nimport {\n  compareTokenInfos,\n  getRpcUrl,\n  getTokenSymbolFromContract,\n} from '../utils'\nimport ERC20Abi from '../abis/erc20'\n// TODO: use ethers for contract calls (without performance reduction).\nimport Web3 from 'web3'\nimport {\n  GenericMappedTokenData,\n  PolygonMappedTokenData,\n  MappedTokenData,\n  MappedToken,\n} from '../constants/types'\nimport { AvalancheMappingProvider } from './AvalancheMappingProvider'\nimport { BaseGoerliMappingProvider } from './BaseGoerliMappingProvider'\nimport { BaseMappingProvider } from './BaseMappingProvider'\nimport { CeloMappingProvider } from './CeloMappingProvider'\n\nconst web3 = new Web3()\n\n// chains we support fetching mappings for (can be different than the l2ChainIds arg for buildList)\nconst CHAINS_WITH_MAPPING_PROVIDERS = [\n  ChainId.ARBITRUM_ONE,\n  ChainId.POLYGON,\n  ChainId.OPTIMISM,\n  ChainId.BNB,\n  ChainId.AVALANCHE,\n  ChainId.CELO,\n  ChainId.BASE,\n  ChainId.BASE_GOERLI,\n]\n\nexport async function buildList(\n  l2ChainIds: Array<ChainId>,\n  l1TokenList: TokenList\n): Promise<TokenList> {\n  const multiChainedTokens: TokenInfo[] = []\n  const chainIdToMappingsMap = await generateTokenMappings(\n    l2ChainIds,\n    l1TokenList\n  )\n  for (const l1Token of l1TokenList.tokens) {\n    if (l1Token.chainId === ChainId.MAINNET) {\n      const chainIdToChildTokenDetailsMap: {\n        [key: number]: {\n          childTokenValid: boolean\n          childTokenAddress: string | undefined\n          decimals?: number\n        }\n      } = {}\n      const l2MappingExtension = {\n        extensions: {\n          bridgeInfo: {} as any,\n        },\n      }\n      // build out the extensions.bridgeInfo data containing mappings for each L2 chain\n      await Promise.all(\n        l2ChainIds.map(async (chainId) => {\n          chainIdToChildTokenDetailsMap[chainId] = await getChildTokenDetails(\n            l1Token,\n            chainId,\n            chainIdToMappingsMap\n          )\n          if (chainIdToChildTokenDetailsMap[chainId].childTokenValid) {\n            l2MappingExtension.extensions.bridgeInfo[chainId] = {\n              tokenAddress:\n                chainIdToChildTokenDetailsMap[chainId].childTokenAddress,\n            }\n          }\n        })\n      )\n\n      // build the TokenInfo objects with bridgeInfo extension\n      l2ChainIds.concat([ChainId.MAINNET]).forEach((chainId) => {\n        if (\n          chainId === ChainId.MAINNET ||\n          chainIdToChildTokenDetailsMap[chainId].childTokenValid\n        ) {\n          const tokenInfo: TokenInfo =\n            chainId === ChainId.MAINNET\n              ? ({\n                  ...l1Token,\n                  extensions:\n                    Object.keys(l2MappingExtension.extensions.bridgeInfo)\n                      .length > 0\n                      ? {\n                          bridgeInfo: l2MappingExtension.extensions.bridgeInfo,\n                        }\n                      : undefined,\n                } as unknown as TokenInfo)\n              : ({\n                  ...l1Token,\n                  decimals:\n                    chainIdToChildTokenDetailsMap[chainId].decimals ??\n                    l1Token.decimals,\n                  chainId: chainId,\n                  address:\n                    chainIdToChildTokenDetailsMap[chainId].childTokenAddress,\n                  extensions: {\n                    bridgeInfo: {\n                      [ChainId.MAINNET]: {\n                        tokenAddress: ethers.utils.getAddress(l1Token.address),\n                      },\n                    },\n                  },\n                } as unknown as TokenInfo)\n\n          multiChainedTokens.push(tokenInfo)\n        }\n      })\n    }\n  }\n\n  // build and return final chainified token list\n  const tokenList = {\n    name: `(ChainIds: ${l2ChainIds}) ${l1TokenList.name}`,\n    timestamp: new Date().toISOString(),\n    version: l1TokenList.version,\n    tokens: multiChainedTokens.sort(compareTokenInfos),\n  }\n\n  return tokenList\n}\n\n// using a symbol lookup contract call to check whether the token exists on the L2\nasync function hasExistingTokenContract(address: string, chainId: ChainId) {\n  web3.setProvider(getRpcUrl(chainId))\n  try {\n    const contract: Contract = new web3.eth.Contract(ERC20Abi, address)\n    await getTokenSymbolFromContract(contract)\n  } catch (e) {\n    return false\n  }\n\n  return true\n}\n\nfunction getMappingProvider(chainId: ChainId, l1TokenList: TokenList) {\n  switch (chainId) {\n    case ChainId.ARBITRUM_ONE:\n      return new ArbitrumMappingProvider(l1TokenList)\n    case ChainId.OPTIMISM:\n      return new OptimismMappingProvider()\n    case ChainId.POLYGON:\n      return new PolygonMappingProvider()\n    case ChainId.BNB:\n      return new BnbMappingProvider()\n    case ChainId.AVALANCHE:\n      return new AvalancheMappingProvider()\n    case ChainId.CELO:\n      return new CeloMappingProvider()\n    case ChainId.BASE:\n      return new BaseMappingProvider()\n    case ChainId.BASE_GOERLI:\n      return new BaseGoerliMappingProvider()\n    default:\n      throw new Error(`Chain ${chainId} not supported for fetching mappings.`)\n  }\n}\n\nasync function generateTokenMappings(\n  chainIds: ChainId[],\n  l1TokenList: TokenList\n) {\n  const chainIdToMappingsMap: {\n    [key: number]:\n      | PolygonMappedTokenData\n      | GenericMappedTokenData\n      | MappedTokenData\n  } = {}\n\n  for (const chainId of chainIds) {\n    if (CHAINS_WITH_MAPPING_PROVIDERS.includes(chainId)) {\n      chainIdToMappingsMap[chainId] = await getMappingProvider(\n        chainId,\n        l1TokenList\n      ).provide()\n    }\n  }\n\n  return chainIdToMappingsMap\n}\n\n// handles both string and object cases for childToken (Polygon mappings return object)\nasync function getChildTokenDetails(\n  l1Token: TokenInfo,\n  chainId: ChainId,\n  chainIdToMappingsMap: {\n    [key: number]:\n      | PolygonMappedTokenData\n      | GenericMappedTokenData\n      | MappedTokenData\n  }\n): Promise<{\n  childTokenValid: boolean\n  childTokenAddress: string | undefined\n  decimals?: number | undefined\n}> {\n  const bridgeInfo = l1Token?.extensions?.bridgeInfo\n  let existingMapping: undefined | string\n  if (bridgeInfo && typeof bridgeInfo === 'object') {\n    const bridgeInfoForChain = bridgeInfo[chainId]\n    if (bridgeInfoForChain && typeof bridgeInfoForChain === 'object') {\n      existingMapping = bridgeInfoForChain.tokenAddress as string\n    }\n  }\n  // use the externally fetched mappings if manual entry doesn't exist for the token/chain mapping\n  // and the given chain is supported for fetching mappings\n  if (\n    CHAINS_WITH_MAPPING_PROVIDERS.includes(chainId) &&\n    existingMapping === undefined\n  ) {\n    const childToken =\n      chainIdToMappingsMap[chainId][l1Token.address.toLowerCase()]\n\n    const childTokenAddress = childToken\n      ? ethers.utils.getAddress(\n          typeof childToken === 'object' ? childToken.childToken : childToken\n        )\n      : undefined\n    const childTokenValid = Boolean(\n      childTokenAddress &&\n        (await hasExistingTokenContract(childTokenAddress, chainId))\n    )\n    const decimals =\n      childToken && (chainId === ChainId.BNB || chainId === ChainId.AVALANCHE || chainId === ChainId.CELO)\n        ? (childToken as MappedToken).decimals\n        : undefined\n    return {\n      childTokenValid: childTokenValid,\n      childTokenAddress: childTokenAddress,\n      decimals: decimals,\n    }\n  }\n  return {\n    childTokenValid: !!existingMapping,\n    childTokenAddress: existingMapping,\n  }\n}\n","import { TokenList } from '@uniswap/token-lists'\n\n/**\n * Verifies that for each token with extensions.bridgeInfo defined, for every\n * chainId there exists a token with that chainId at the root-level of the\n * token list.\n *\n * @returns input TokenList if valid, throws otherwise\n */\nexport function verifyExtensions(tokenList: TokenList) {\n  for (const token of tokenList.tokens) {\n    if (!token.extensions?.bridgeInfo) continue\n\n    // if has extension, make sure that:\n    // 1/ other token has root-level entry\n    // 2/ other root entry has extension pointing to it\n    for (const destChainId of Object.keys(token.extensions.bridgeInfo)) {\n      const destTokens = tokenList.tokens.filter(\n        (t) =>\n          t.chainId === Number(destChainId) &&\n          t.address ===\n            // @ts-expect-error TokenList schema does not allow bridgeInfo objetcs yet\n            token.extensions.bridgeInfo[destChainId].tokenAddress\n      )\n\n      if (destTokens.length > 1) {\n        throw new Error(\n          `TokenList has duplicate root-level tokens for ${token.symbol} ${token.chainId}`\n        )\n      }\n\n      const destToken = destTokens[0]\n\n      if (!destToken) {\n        throw new Error(\n          `TokenList is missing root-level TokenInfo for ${token.symbol} ${token.chainId}`\n        )\n      }\n\n      // ensure destToken has an extension pointing back to this\n      const srcToken: { tokenAddress: string } | undefined =\n        // @ts-expect-error TokenList schema does not allow bridgeInfo objects yet\n        destToken.extensions?.bridgeInfo[token.chainId]\n\n      if (!srcToken) {\n        throw new Error(\n          `TokenList is missing root-level TokenInfo.extensions.bridgeInfo for ${token.symbol} ${token.chainId}`\n        )\n      }\n\n      if (srcToken.tokenAddress !== token.address) {\n        throw new Error(\n          `TokenList has invalid root-level TokenInfo.extensions.bridgeInfo for ${token.symbol} ${token.chainId}. Expected ${token.address} but got ${srcToken.tokenAddress}`\n        )\n      }\n    }\n  }\n\n  return tokenList\n}\n","import { TokenList } from '@uniswap/token-lists'\nimport { cloneDeep, groupBy, merge } from 'lodash'\nimport { ChainId } from './constants/chainId'\nimport { buildList } from './providers'\nimport {\n  compareTokenInfos,\n  getTokenList,\n  TokenListOrFetchableTokenList,\n} from './utils'\nimport { verifyExtensions } from './verify'\n\n/**\n * Adds bridgeInfo to the given token list for Optimism, Polygon and Arbitrum.\n * @param l1TokenListOrPathOrUrl\n * @returns TokenList with l2 bridgeInfo filled\n */\nexport async function chainify(\n  l1TokenListOrPathOrUrl: TokenListOrFetchableTokenList\n): Promise<TokenList> {\n  const l1TokenList = await getTokenList(l1TokenListOrPathOrUrl)\n  const l2Chains = [\n    ChainId.POLYGON,\n    ChainId.ARBITRUM_ONE,\n    ChainId.OPTIMISM,\n    ChainId.CELO,\n    ChainId.BNB,\n    ChainId.AVALANCHE,\n    ChainId.BASE,\n    ChainId.BASE_GOERLI,\n  ]\n\n  const chainified = await chainifyTokenList(l2Chains, l1TokenListOrPathOrUrl)\n  const merged = mergeTokenLists(\n    l1TokenList, // providing l1 first to make sure duplicated tokens resolve to this list\n    chainified\n  )\n\n  return merged\n}\n\n/**\n * Given a network and a TokenList, returns the TokenList with `extensions` filled.\n * @param l2ChainIds layer 2 chainIds to operate on\n * @param l1TokenListOrPathOrUrl either an L1 TokenList object or a path/url to a TokenList\n * @returns L1 TokenList with `extensions` filled for the given network\n */\nexport async function chainifyTokenList(\n  l2ChainIds: Array<ChainId>,\n  l1TokenListOrPathOrUrl: TokenListOrFetchableTokenList\n): Promise<TokenList> {\n  try {\n    const l1TokenList = await getTokenList(l1TokenListOrPathOrUrl)\n    const tokenList = await buildList(l2ChainIds, l1TokenList)\n    return verifyExtensions(tokenList)\n  } catch (e) {\n    throw new Error(`An error occured: ${e}`)\n  }\n}\n\n/** Merges two token lists, resolving conflicts to primary list. */\nexport function mergeTokenLists(\n  primary: TokenList,\n  secondary: TokenList\n): TokenList {\n  primary = cloneDeep(primary)\n  secondary = cloneDeep(secondary)\n\n  const grouped = groupBy(\n    [...secondary.tokens, ...primary.tokens],\n    (t) => `${t.chainId}-${t.address.toLowerCase()}`\n  )\n\n  const merged = Object.values(grouped).map((group) => {\n    if (group.length === 1) {\n      return group[0]\n    }\n\n    const merged = merge(group[0], group[1])\n    if (\n      merged.extensions?.bridgeInfo &&\n      typeof merged.extensions.bridgeInfo === 'object'\n    ) {\n      // remove reference to self-chain from merge\n      delete merged.extensions.bridgeInfo[merged.chainId]\n    }\n    return merged\n  })\n\n  return cloneDeep({\n    ...primary,\n    tokens: merged.sort(compareTokenInfos),\n  })\n}\n"],"names":["runtime","exports","undefined","Op","Object","prototype","hasOwn","hasOwnProperty","$Symbol","Symbol","iteratorSymbol","iterator","asyncIteratorSymbol","asyncIterator","toStringTagSymbol","toStringTag","define","obj","key","value","defineProperty","enumerable","configurable","writable","err","wrap","innerFn","outerFn","self","tryLocsList","generator","create","Generator","context","Context","_invoke","state","GenStateSuspendedStart","method","arg","GenStateExecuting","Error","GenStateCompleted","doneResult","delegate","delegateResult","maybeInvokeDelegate","ContinueSentinel","sent","_sent","dispatchException","abrupt","record","tryCatch","type","done","GenStateSuspendedYield","makeInvokeMethod","fn","call","GeneratorFunction","GeneratorFunctionPrototype","IteratorPrototype","this","getProto","getPrototypeOf","NativeIteratorPrototype","values","Gp","defineIteratorMethods","forEach","AsyncIterator","PromiseImpl","invoke","resolve","reject","result","__await","then","unwrapped","error","previousPromise","callInvokeWithMethodAndArg","TypeError","info","resultName","next","nextLoc","pushTryEntry","locs","entry","tryLoc","catchLoc","finallyLoc","afterLoc","tryEntries","push","resetTryEntry","completion","reset","iterable","iteratorMethod","isNaN","length","i","displayName","isGeneratorFunction","genFun","ctor","constructor","name","mark","setPrototypeOf","__proto__","awrap","async","Promise","iter","keys","object","reverse","pop","skipTempReset","prev","charAt","slice","stop","rootRecord","rval","exception","handle","loc","caught","hasCatch","hasFinally","finallyEntry","complete","finish","catch","thrown","delegateYield","module","regeneratorRuntime","accidentalStrictMode","globalThis","Function","ChainId","compareTokenInfos","t1","t2","chainId","symbol","toLowerCase","getTokenList","l1TokenListOrPathOrUrl","getTokenListObj","getTokenListObjFromUrl","url","axios","get","data","getTokenListObjFromLocalPath","path","JSON","parse","readFileSync","toString","pathOrUrl","localFileExists","existsSync","looksLikeUrl","isValidHttpUrl","isTokenList","tokenList","urlString","URL","_","protocol","actualListKeys","Set","every","has","version","tokens","token","tokenKeys","getRpcUrl","MAINNET","OPTIMISM","OPTIMISTIC_KOVAN","ARBITRUM_ONE","ARBITRUM_RINKEBY","POLYGON","POLYGON_MUMBAI","BNB","AVALANCHE","CELO","CELO_ALFAJORES","BASE","BASE_GOERLI","getTokenSymbolFromContract","tokenContract","all","methods","config","process","env","MAINNET_RPC","l2Rpc","getNetworkConfig","getL1Network","getL2Network","MultiCaller","l2Network","partnerChainID","l1Network","arbProvider","providers","JsonRpcProvider","chainID","ethProvider","fromProvider","l1MultiCaller","l1","network","provider","multiCaller","l2","getL2TokenAddressesFromL1","l1TokenAddresses","l1GatewayRouterAddress","iFace","L1GatewayRouter__factory","createInterface","multiCall","map","addr","encoder","encodeFunctionData","decoder","returnData","decodeFunctionResult","targetAddr","ArbitrumMappingProvider","l1TokenList","provide","tokenAddresses","address","tokenBridge","l1GatewayRouter","l2AddressesFromL1","reduce","index","OptimismMappingProvider","opTokenId_baseAddressMap","allTokens","extensions","_token$extensions","opTokenId","_token$extensions2","PolygonMappingProvider","headers","isPos","rootToken","BnbMappingProvider","bnbMappings","abi","constant","inputs","outputs","payable","stateMutability","anonymous","indexed","AvalancheMappingProvider","avaxMappings","BaseGoerliMappingProvider","opTokenId_baseGoerliAddressMap","BaseMappingProvider","CeloMappingProvider","celoMappings","web3","Web3","CHAINS_WITH_MAPPING_PROVIDERS","buildList","l2ChainIds","multiChainedTokens","generateTokenMappings","chainIdToMappingsMap","l1Token","chainIdToChildTokenDetailsMap","l2MappingExtension","bridgeInfo","getChildTokenDetails","childTokenValid","tokenAddress","childTokenAddress","concat","tokenInfo","decimals","ethers","utils","getAddress","timestamp","Date","toISOString","sort","hasExistingTokenContract","setProvider","contract","eth","Contract","ERC20Abi","getMappingProvider","chainIds","includes","_l1Token$extensions","bridgeInfoForChain","existingMapping","childToken","Boolean","verifyExtensions","destChainId","destTokens","filter","t","Number","destToken","srcToken","_destToken$extensions","l2Chains","chainifyTokenList","merged","mergeTokenLists","primary","secondary","cloneDeep","grouped","groupBy","group","merge"],"mappings":"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"}